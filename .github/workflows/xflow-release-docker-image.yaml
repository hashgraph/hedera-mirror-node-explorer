name: "ZXF: Release Docker Image"
on:
  push:
    tags:
      - 'release/v[0-9]+.[0-9]+.[0-9]+-?*'
      - 'v[0-9]+.[0-9]+.[0-9]+-?*'
  workflow_dispatch:
    inputs:
      new-version:
        description: "New Release Version (ie. 0.30.0):"
        type: string
        required: true

defaults:
  run:
    shell: bash

permissions:
  id-token: write
  contents: read

env:
  LC_ALL: C.UTF-8

jobs:
  prepare-release:
    name: Release / Prepare
    runs-on: mirror-node-linux-medium
    outputs:
      version: ${{ steps.extract.outputs.version }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          egress-policy: audit

      - name: Install Semantic Version Tools
        run: |
          echo "::group::Download SemVer Binary"
          sudo curl -L -o /usr/local/bin/semver https://raw.githubusercontent.com/fsaintjacques/semver-tool/master/src/semver
          echo "::endgroup::"
          echo "::group::Change SemVer Binary Permissions"
          sudo chmod -v +x /usr/local/bin/semver
          echo "::endgroup::"
          echo "::group::Show SemVer Binary Version Info"
          semver --version
          echo "::endgroup::"

      - name: Validate Version
        run: |
          VALID_VERSION="$(semver validate "${{ inputs.new-version || github.ref_name }}")"
          
          if [[ "${VALID_VERSION}" != "valid" ]]; then 
            echo "::error title=Version Error::The supplied new-version parameter of '${{ inputs.new_version || github.ref_name }}' is invalid and does not conform to the semantic versioning specifications."
            exit 2
          fi

      - name: Extract Version
        id: extract
        run: |
          RELEASE_VERSION="$(semver get release "${{ inputs.new-version || github.ref_name }}")"
          PRERELEASE_VERSION="$(semver get prerel "${{ inputs.new-version || github.ref_name }}")"

          FINAL_VERSION="${RELEASE_VERSION}"
          [[ -n "${PRERELEASE_VERSION}" ]] && FINAL_VERSION="${RELEASE_VERSION}-${PRERELEASE_VERSION}"

          echo "version=${FINAL_VERSION}" >>"${GITHUB_OUTPUT}"

  deploy-docker-image:
    name: Deploy / Docker / Image
    runs-on: mirror-node-linux-medium
    needs:
      - prepare-release
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          egress-policy: audit

      - name: Checkout Code
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0

      - name: Install JSON Tools
        run: |         
          if ! command -v jq >/dev/null 2>&1; then
            echo "::group::Setup JQ Command"
            sudo apt update
            sudo apt install -y jq
            echo "::endgroup::"
          fi
          
          JQ_VERSION="$(jq --version)"
          if [[ "${JQ_VERSION}" != "jq-1.6" ]]; then
            echo "::group::Updating JQ Version"
            sudo apt update
            sudo apt upgrade -y jq
            echo "::endgroup::"
          fi
          
          if ! command -v tee >/dev/null 2>&1; then
            echo "::group::Setup Tee Command"
            sudo apt update
            sudo apt install -y coreutils
            echo "::endgroup::"
          fi
          
          echo "::group::Show JQ Version"
          jq --version
          echo "::endgroup::"

      - name: Update Application Version
        run: |
          cat package.json | \
            jq --arg version "${{ needs.prepare-release.outputs.version }}" '.version = $version' | \
            tee package.json

      - name: Setup NodeJS
        uses: actions/setup-node@0a44ba7841725637a19e28fa30b79a866c81b0a6 # v4.0.4
        with:
          node-version: 19
          cache: npm

      - name: Authenticate to Google Cloud
        id: google-auth
        uses: google-github-actions/auth@62cf5bd3e4211a0a0b51f2c6d6a37129d828611d # v2.1.5
        with:
          workload_identity_provider: 'projects/101730247931/locations/global/workloadIdentityPools/hedera-registry-pool/providers/hedera-registry-gh-actions'
          service_account: 'swirlds-automation@hedera-registry.iam.gserviceaccount.com'
          token_format: access_token

      - name: Setup Docker Buildx QEMU
        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3.2.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@988b5a0280414f521da01fcc63a27aeeb4b104db # v3.6.1

      - name: Authorize Docker
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: gcr.io
          username: oauth2accesstoken
          password: ${{ steps.google-auth.outputs.access_token }}

      - name: Install Dependencies
        run: npm ci

      - name: Compile Code
        run: npm run build

      - name: Build and Push Image
        uses: docker/build-push-action@4f58ea79222b3b9dc2c8bbdd6debcef730109a75 # v6.9.0
        with:
          push: true
          file: Dockerfile
          context: .
          platforms: |
            linux/arm64
            linux/amd64
          tags: |
            gcr.io/hedera-registry/hedera-mirror-node-explorer:${{ needs.prepare-release.outputs.version }}
            gcr.io/hedera-registry/hedera-mirror-node-explorer:latest

      - name: Render Job Summary
        run: |
          printf "### Published Docker Images\n" >> "${GITHUB_STEP_SUMMARY}"
          printf "| Image Name | Version | URL | Supported Architectures |\n" >> "${GITHUB_STEP_SUMMARY}"
          printf "| ---------- | ------- | --- | ----------------------- |\n" >> "${GITHUB_STEP_SUMMARY}"
          printf "| %s | %s | %s | %s |\n" \
            "gcr.io/hedera-regsitry/hedera-mirror-node-explorer" \
            "${{ needs.prepare-release.outputs.version }}" \
            "[GCP Console](https://console.cloud.google.com/gcr/images/hedera-registry/global/hedera-mirror-node-explorer?project=hedera-registry)" \
            "linux/amd64, linux/arm64" >> "${GITHUB_STEP_SUMMARY}"
          
          printf "| %s | %s | %s | %s |\n" \
            "gcr.io/hedera-regsitry/hedera-mirror-node-explorer" \
            "latest" \
            "[GCP Console](https://console.cloud.google.com/gcr/images/hedera-registry/global/hedera-mirror-node-explorer?project=hedera-registry)" \
            "linux/amd64, linux/arm64" >> "${GITHUB_STEP_SUMMARY}"

          printf "\n\n" >> "${GITHUB_STEP_SUMMARY}"
